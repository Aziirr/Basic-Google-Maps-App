{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\OneDrive\\\\Aplikacje\\\\Stefan\\\\Stefan 4 klasa\\\\Expo\\\\map\\\\components\\\\MyButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from \"expo-font\";\nimport * as Location from \"expo-location\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\n\nvar MyButton = function (_Component) {\n  _inherits(MyButton, _Component);\n\n  var _super = _createSuper(MyButton);\n\n  function MyButton() {\n    var _this;\n\n    _classCallCheck(this, MyButton);\n\n    _this = _super.call(this);\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'myFont': require(\"../myfont.ttf\")\n              }));\n\n            case 2:\n              _this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.setData = function _callee2() {\n      var pos, arr;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              pos = _this.getPosition();\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('locations'));\n\n            case 3:\n              arr = _context2.sent;\n              arr = JSON.parse(arr);\n              if (!arr) arr = [];\n              arr.push(pos);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('key' + 'locations', 'value' + JSON.stringify(arr)));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPosition = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.click = function _callee4(event) {\n      var pos;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(_this.props.action === 'start')) {\n                _context4.next = 4;\n                break;\n              }\n\n              _this.props.navigation.navigate('Locations');\n\n              _context4.next = 14;\n              break;\n\n            case 4:\n              if (!(_this.props.action === 'save')) {\n                _context4.next = 9;\n                break;\n              }\n\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(_this.setData());\n\n            case 7:\n              _context4.next = 14;\n              break;\n\n            case 9:\n              if (!(_this.props.action === 'map')) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return _regeneratorRuntime.awrap(_this.getPosition());\n\n            case 12:\n              pos = _context4.sent;\n\n              _this.props.navigation.navigate('Map', {\n                pos: pos\n              });\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(MyButton, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        border: '2px solid black',\n        textAlign: 'center'\n      };\n      return React.createElement(TouchableOpacity, {\n        style: this.style,\n        onPress: this.click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 60,\n          fontFamily: 'myFont'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \" \", this.props.title, \" \"));\n    }\n  }]);\n\n  return MyButton;\n}(Component);\n\nexport { MyButton as default };\nMyButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  navigation: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:/Users/Piotr/OneDrive/Aplikacje/Stefan/Stefan 4 klasa/Expo/map/components/MyButton.js"],"names":["PropTypes","React","Component","AsyncStorage","Font","Location","MyButton","componentDidMount","loadAsync","require","setState","fontLoaded","setData","pos","getPosition","getItem","arr","JSON","parse","push","setItem","stringify","getCurrentPositionAsync","click","event","props","action","navigation","navigate","state","style","border","textAlign","fontWeight","fontSize","fontFamily","title","propTypes","string","isRequired","object"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;SACQC,Y;;;AACR,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;IAGqBC,Q;;;;;AACjB,sBAAc;AAAA;;AAAA;;AACV;;AADU,UAKdC,iBALc,GAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACVH,IAAI,CAACI,SAAL,CAAe;AACjB,0BAAUC,OAAO;AADA,eAAf,CADU;;AAAA;AAIhB,oBAAKC,QAAL,CAAc;AAACC,gBAAAA,UAAU,EAAE;AAAb,eAAd;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALN;;AAAA,UAWdC,OAXc,GAWJ;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,cAAAA,GADE,GACI,MAAKC,WAAL,EADJ;AAAA;AAAA,+CAEUX,YAAY,CAACY,OAAb,CAAqB,WAArB,CAFV;;AAAA;AAEFC,cAAAA,GAFE;AAGNA,cAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAN;AACA,kBAAI,CAACA,GAAL,EACIA,GAAG,GAAG,EAAN;AACJA,cAAAA,GAAG,CAACG,IAAJ,CAASN,GAAT;AANM;AAAA,+CAOAV,YAAY,CAACiB,OAAb,CAAqB,QAAQ,WAA7B,EAA0C,UAAUH,IAAI,CAACI,SAAL,CAAeL,GAAf,CAApD,CAPA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXI;;AAAA,UAsBdF,WAtBc,GAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACGT,QAAQ,CAACiB,uBAAT,CAAiC,EAAjC,CADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtBA;;AAAA,UA0BdC,KA1Bc,GA0BN,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,MAAKC,KAAL,CAAWC,MAAX,KAAsB,OADtB;AAAA;AAAA;AAAA;;AAEA,oBAAKD,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,WAA/B;;AAFA;AAAA;;AAAA;AAAA,oBAGK,MAAKH,KAAL,CAAWC,MAAX,KAAsB,MAH3B;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAIM,MAAKd,OAAL,EAJN;;AAAA;AAAA;AAAA;;AAAA;AAAA,oBAKO,MAAKa,KAAL,CAAWC,MAAX,KAAsB,KAL7B;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAMgB,MAAKZ,WAAL,EANhB;;AAAA;AAMID,cAAAA,GANJ;;AAOA,oBAAKY,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,KAA/B,EAAsC;AAACf,gBAAAA,GAAG,EAAHA;AAAD,eAAtC;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1BM;;AAEV,UAAKgB,KAAL,GAAa;AAAClB,MAAAA,UAAU,EAAE;AAAb,KAAb;AAFU;AAGb;;;;6BAkCQ;AACL,UAAMmB,KAAK,GAAG;AACVC,QAAAA,MAAM,EAAE,iBADE;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIA,aACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,KAAKF,KAA9B;AAAqC,QAAA,OAAO,EAAE,KAAKP,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACU,UAAAA,UAAU,EAAE,MAAb;AAAqBC,UAAAA,QAAQ,EAAE,EAA/B;AAAmCC,UAAAA,UAAU,EAAE;AAA/C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyE,KAAKV,KAAL,CAAWW,KAApF,MADJ,CADJ;AAKH;;;;EAhDiClC,S;;SAAjBI,Q;AAmDrBA,QAAQ,CAAC+B,SAAT,GAAqB;AACjBD,EAAAA,KAAK,EAAEpC,SAAS,CAACsC,MAAV,CAAiBC,UADP;AAEjBb,EAAAA,MAAM,EAAE1B,SAAS,CAACsC,MAAV,CAAiBC,UAFR;AAGjBZ,EAAAA,UAAU,EAAE3B,SAAS,CAACwC,MAAV,CAAiBD;AAHZ,CAArB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {AsyncStorage, Text, TouchableOpacity} from \"react-native\";\r\nimport * as Font from \"expo-font\";\r\nimport * as Location from \"expo-location\";\r\nimport {ActivityIndicator} from 'react-native';\r\n\r\nexport default class MyButton extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {fontLoaded: false}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await Font.loadAsync({\r\n            'myFont': require('../myfont.ttf'), // Uwaga: proszę w nazwie fonta nie używać dużych liter\r\n        });\r\n        this.setState({fontLoaded: true})\r\n    }\r\n    setData = async () => {\r\n        let pos = this.getPosition()\r\n        let arr = await AsyncStorage.getItem('locations');\r\n        arr = JSON.parse(arr)\r\n        if (!arr)\r\n            arr = []\r\n        arr.push(pos)\r\n        await AsyncStorage.setItem('key' + 'locations', 'value' + JSON.stringify(arr));\r\n\r\n    }\r\n\r\n    getPosition = async () => {\r\n        return await Location.getCurrentPositionAsync({})\r\n    }\r\n\r\n    click = async event => {\r\n        if (this.props.action === 'start')\r\n            this.props.navigation.navigate('Locations')\r\n        else if (this.props.action === 'save') {\r\n            await this.setData()\r\n        } else if (this.props.action === 'map') {\r\n            let pos = await this.getPosition()\r\n            this.props.navigation.navigate('Map', {pos})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            border: '2px solid black',\r\n            textAlign: 'center',\r\n        }\r\n        return (\r\n            <TouchableOpacity style={this.style} onPress={this.click}>\r\n                <Text style={{fontWeight: 'bold', fontSize: 60, fontFamily: 'myFont'}}> {this.props.title} </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nMyButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    action: PropTypes.string.isRequired,\r\n    navigation: PropTypes.object.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}