{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\OneDrive\\\\Aplikacje\\\\Stefan\\\\Stefan 4 klasa\\\\Expo\\\\map\\\\components\\\\MyButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport register from \"../clickFunctions/register\";\n\nvar MyButton = function (_Component) {\n  _inherits(MyButton, _Component);\n\n  var _super = _createSuper(MyButton);\n\n  function MyButton() {\n    var _this;\n\n    _classCallCheck(this, MyButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.click = function (event) {\n      if (_this.props.action === 'register') register(_this.props.values, _this.props.navigation);else if (_this.props.action === 'delete') {\n        fetch(\"http://localhost:3000/delete?id=\" + _this.props.userId).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return _this.props.navigation.navigate('Users', {\n            users: data.users\n          });\n        });\n      } else if (_this.props.action === 'details') _this.props.navigation.navigate('UserDetails', {\n        username: _this.props.username,\n        password: _this.props.password,\n        date: _this.props.date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MyButton, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        border: '2px solid black',\n        textAlign: 'center',\n        scale: 1.2\n      };\n      return React.createElement(TouchableOpacity, {\n        style: this.style,\n        onPress: this.click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \" \", this.props.title, \" \"));\n    }\n  }]);\n\n  return MyButton;\n}(Component);\n\nexport { MyButton as default };\nMyButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  navigation: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:/Users/Piotr/OneDrive/Aplikacje/Stefan/Stefan 4 klasa/Expo/map/components/MyButton.js"],"names":["PropTypes","React","Component","register","MyButton","click","event","props","action","values","navigation","fetch","userId","then","response","json","data","navigate","users","username","password","date","style","border","textAlign","scale","fontWeight","title","propTypes","string","isRequired","object"],"mappings":";;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,QAAP;;IAEqBC,Q;;;;;;;;;;;;;;;;UACjBC,K,GAAQ,UAAAC,KAAK,EAAI;AACb,UAAI,MAAKC,KAAL,CAAWC,MAAX,KAAsB,UAA1B,EACIL,QAAQ,CAAC,MAAKI,KAAL,CAAWE,MAAZ,EAAoB,MAAKF,KAAL,CAAWG,UAA/B,CAAR,CADJ,KAEK,IAAI,MAAKH,KAAL,CAAWC,MAAX,KAAsB,QAA1B,EAAoC;AACrCG,QAAAA,KAAK,CAAC,qCAAqC,MAAKJ,KAAL,CAAWK,MAAjD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADlB,EAEKF,IAFL,CAEU,UAAAG,IAAI;AAAA,iBAAI,MAAKT,KAAL,CAAWG,UAAX,CAAsBO,QAAtB,CAA+B,OAA/B,EAAwC;AAACC,YAAAA,KAAK,EAAEF,IAAI,CAACE;AAAb,WAAxC,CAAJ;AAAA,SAFd;AAGH,OAJI,MAIE,IAAI,MAAKX,KAAL,CAAWC,MAAX,KAAsB,SAA1B,EACH,MAAKD,KAAL,CAAWG,UAAX,CAAsBO,QAAtB,CAA+B,aAA/B,EAA8C;AAC1CE,QAAAA,QAAQ,EAAE,MAAKZ,KAAL,CAAWY,QADqB;AAE1CC,QAAAA,QAAQ,EAAE,MAAKb,KAAL,CAAWa,QAFqB;AAG1CC,QAAAA,IAAI,EAAE,MAAKd,KAAL,CAAWc;AAHyB,OAA9C;AAMP,K;;;;;;;6BAEQ;AACL,UAAMC,KAAK,GAAG;AACVC,QAAAA,MAAM,EAAE,iBADE;AAEVC,QAAAA,SAAS,EAAE,QAFD;AAGVC,QAAAA,KAAK,EAAE;AAHG,OAAd;AAKA,aACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,KAAKH,KAA9B;AAAqC,QAAA,OAAO,EAAE,KAAKjB,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACqB,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqC,KAAKnB,KAAL,CAAWoB,KAAhD,MADJ,CADJ;AAKH;;;;EA5BiCzB,S;;SAAjBE,Q;AA+BrBA,QAAQ,CAACwB,SAAT,GAAqB;AACjBD,EAAAA,KAAK,EAAE3B,SAAS,CAAC6B,MAAV,CAAiBC,UADP;AAEjBtB,EAAAA,MAAM,EAAER,SAAS,CAAC6B,MAAV,CAAiBC,UAFR;AAGjBpB,EAAAA,UAAU,EAAEV,SAAS,CAAC+B,MAAV,CAAiBD;AAHZ,CAArB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {View, Text, TouchableOpacity} from \"react-native\";\r\nimport register from \"../clickFunctions/register\";\r\n\r\nexport default class MyButton extends Component {\r\n    click = event => {\r\n        if (this.props.action === 'register')\r\n            register(this.props.values, this.props.navigation)\r\n        else if (this.props.action === 'delete') {\r\n            fetch(\"http://localhost:3000/delete?id=\" + this.props.userId,)\r\n                .then(response => response.json())\r\n                .then(data => this.props.navigation.navigate('Users', {users: data.users}))\r\n        } else if (this.props.action === 'details')\r\n            this.props.navigation.navigate('UserDetails', {\r\n                username: this.props.username,\r\n                password: this.props.password,\r\n                date: this.props.date\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            border: '2px solid black',\r\n            textAlign: 'center',\r\n            scale:(1.2)\r\n        }\r\n        return (\r\n            <TouchableOpacity style={this.style} onPress={this.click}>\r\n                <Text style={{fontWeight: 'bold'}}> {this.props.title} </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nMyButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    action: PropTypes.string.isRequired,\r\n    navigation: PropTypes.object.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}