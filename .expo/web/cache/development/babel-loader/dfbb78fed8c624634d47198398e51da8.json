{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\OneDrive\\\\Aplikacje\\\\Stefan\\\\Stefan 4 klasa\\\\Expo\\\\register\\\\components\\\\MyButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport register from \"../clickFunctions/register\";\n\nvar MyButton = function (_Component) {\n  _inherits(MyButton, _Component);\n\n  var _super = _createSuper(MyButton);\n\n  function MyButton() {\n    var _this;\n\n    _classCallCheck(this, MyButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.click = function (event) {\n      if (_this.props.action === 'register') register(_this.props.values, _this.props.navigation);\n    };\n\n    return _this;\n  }\n\n  _createClass(MyButton, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        border: '2px solid black',\n        textAlign: 'center',\n        width: this.props.width,\n        height: this.props.height\n      };\n      return React.createElement(TouchableOpacity, {\n        style: this.style,\n        onPress: this.click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, \" \", this.props.title, \" \"));\n    }\n  }]);\n\n  return MyButton;\n}(Component);\n\nexport { MyButton as default };\nMyButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  navigation: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:/Users/Piotr/OneDrive/Aplikacje/Stefan/Stefan 4 klasa/Expo/register/components/MyButton.js"],"names":["PropTypes","React","Component","register","MyButton","click","event","props","action","values","navigation","style","border","textAlign","width","height","fontWeight","title","propTypes","string","isRequired","object"],"mappings":";;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,QAAP;;IACqBC,Q;;;;;;;;;;;;;;;;UACjBC,K,GAAQ,UAAAC,KAAK,EAAG;AACZ,UAAG,MAAKC,KAAL,CAAWC,MAAX,KAAqB,UAAxB,EACIL,QAAQ,CAAC,MAAKI,KAAL,CAAWE,MAAZ,EAAmB,MAAKF,KAAL,CAAWG,UAA9B,CAAR;AACP,K;;;;;;;6BACQ;AACL,UAAMC,KAAK,GAAG;AAACC,QAAAA,MAAM,EAAE,iBAAT;AAA4BC,QAAAA,SAAS,EAAE,QAAvC;AAAgDC,QAAAA,KAAK,EAAC,KAAKP,KAAL,CAAWO,KAAjE;AAAuEC,QAAAA,MAAM,EAAC,KAAKR,KAAL,CAAWQ;AAAzF,OAAd;AACA,aACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,KAAKJ,KAA9B;AAAqC,QAAA,OAAO,EAAE,KAAKN,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACW,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqC,KAAKT,KAAL,CAAWU,KAAhD,MADJ,CADJ;AAKH;;;;EAZiCf,S;;SAAjBE,Q;AAerBA,QAAQ,CAACc,SAAT,GAAqB;AACjBD,EAAAA,KAAK,EAAEjB,SAAS,CAACmB,MAAV,CAAiBC,UADP;AAEjBZ,EAAAA,MAAM,EAAER,SAAS,CAACmB,MAAV,CAAiBC,UAFR;AAGjBV,EAAAA,UAAU,EAACV,SAAS,CAACqB,MAAV,CAAiBD;AAHX,CAArB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {View, Text, TouchableOpacity} from \"react-native\";\r\nimport register from \"../clickFunctions/register\";\r\nexport default class MyButton extends Component {\r\n    click = event =>{\r\n        if(this.props.action ==='register')\r\n            register(this.props.values,this.props.navigation)\r\n    }\r\n    render() {\r\n        const style = {border: '2px solid black', textAlign: 'center',width:this.props.width,height:this.props.height}\r\n        return (\r\n            <TouchableOpacity style={this.style} onPress={this.click}>\r\n                <Text style={{fontWeight: 'bold'}}> {this.props.title} </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nMyButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    action: PropTypes.string.isRequired,\r\n    navigation:PropTypes.object.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}