{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\OneDrive\\\\Aplikacje\\\\Stefan\\\\Stefan 4 klasa\\\\Expo\\\\map\\\\components\\\\Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport MyButton from \"./MyButton\";\nimport * as Font from \"expo-font\";\n\nvar _default = function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this);\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'myFont': require(\"./myfont.ttf\")\n              }));\n\n            case 2:\n              _this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.fontloaded ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'myFont',\n          fontSize: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"Witamy\")) : null;\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/Piotr/OneDrive/Aplikacje/Stefan/Stefan 4 klasa/Expo/map/components/Home.js"],"names":["React","Component","MyButton","Font","componentDidMount","loadAsync","require","setState","fontLoaded","state","fontloaded","flex","fontFamily","fontSize"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;;;;AAYA,OAAOC,QAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;;;;;;AAII,sBAAc;AAAA;;AAAA;;AACV;;AADU,UAKdC,iBALc,GAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACVD,IAAI,CAACE,SAAL,CAAe;AACjB,0BAAUC,OAAO;AADA,eAAf,CADU;;AAAA;AAIhB,oBAAKC,QAAL,CAAc;AAACC,gBAAAA,UAAU,EAAE;AAAb,eAAd;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALN;;AAEV,UAAKC,KAAL,GAAa;AAACD,MAAAA,UAAU,EAAE;AAAb,KAAb;AAFU;AAGb;;;;6BASQ;AACL,aACI,KAAKC,KAAL,CAAWC,UAAX,GAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACTC,UAAAA,UAAU,EAAE,QADH;AAETC,UAAAA,QAAQ,EAAE;AAFD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFJ,GASI,IAVR;AAaH;;;;EA3BwBZ,S","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    View,\r\n    KeyboardAvoidingView,\r\n    TextInput,\r\n    StyleSheet,\r\n    Text,\r\n    Platform,\r\n    TouchableWithoutFeedback,\r\n    Button,\r\n    Keyboard\r\n} from 'react-native';\r\nimport MyButton from \"./MyButton\";\r\nimport * as Font from \"expo-font\";\r\n\r\n\r\nexport default class extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {fontLoaded: false}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await Font.loadAsync({\r\n            'myFont': require('./myfont.ttf'), // Uwaga: proszę w nazwie fonta nie używać dużych liter\r\n        });\r\n        this.setState({fontLoaded: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.fontloaded\r\n                ?\r\n                <View style={{flex: 1}}>\r\n                    <Text style={{\r\n                        fontFamily: 'myFont',\r\n                        fontSize: 100\r\n                    }}>Witamy</Text>\r\n                </View>\r\n                :\r\n                null\r\n        )\r\n            ;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}